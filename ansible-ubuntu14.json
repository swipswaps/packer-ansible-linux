{
  "variables": {
    "image_name": "ansible-ubuntu14",

    "virtualbox_headless": "false",

    "virtualbox_iso_url": "iso/ubuntu-14.04.3-server-amd64.iso",
    "virtualbox_iso_checksum": "",
    "virtualbox_iso_checksum_type": "sha256",

    "preseed_path": "ubuntu-14.04/preseed.cfg",

    "docker_user": "",
    "docker_source_image": "",

    "atlas_user": "",
    "atlas_token": "{{env `ATLAS_TOKEN`}}",

    "aws_access_key": "{{env `AWS_ACCESS_KEY`}}",
    "aws_secret_key": "{{env `Ã€WS_SECRET_KEY`}}",
    "aws_source_ami": "ami-fce3c696",

    "version": "14.04",

    "timestamp": "{{isotime \"20060102150405\"}}"
  },

  "builders": [
    {
      "name": "virtualbox",
      "type": "virtualbox-iso",

      "vm_name": "{{user `name`}}",

      "boot_command": [
        "<esc><wait>",
        "<esc><wait>",
        "<enter><wait>",
        "/install/vmlinuz<wait>",
        " auto<wait>",
        " console-setup/ask_detect=false<wait>",
        " console-setup/layoutcode=us<wait>",
        " console-setup/modelcode=pc105<wait>",
        " debconf/frontend=noninteractive<wait>",
        " debian-installer=en_US<wait>",
        " fb=false<wait>",
        " initrd=/install/initrd.gz<wait>",
        " kbd-chooser/method=us<wait>",
        " keyboard-configuration/layout=USA<wait>",
        " keyboard-configuration/variant=USA<wait>",
        " locale=en_US<wait>",
        " netcfg/get_domain=vm<wait>",
        " netcfg/get_hostname=vagrant<wait>",
        " noapic<wait>",
        " preseed/url=http://{{ .HTTPIP }}:{{ .HTTPPort }}/{{user `preseed_path`}}<wait>",
        " -- <wait>",
        "<enter><wait>"
      ],
      "boot_wait": "10s",

      "disk_size": 80000,
      "hard_drive_interface": "sata",

      "guest_additions_path": "VBoxGuestAdditions_{{.Version}}.iso",
      "guest_os_type": "Ubuntu_64",
      "headless": "{{ user `virtualbox_headless` }}",

      "http_directory": "http",
      "iso_url": "{{user `virtualbox_iso_url`}}",
      "iso_checksum": "{{user `virtualbox_iso_checksum`}}",
      "iso_checksum_type": "{{user `virtualbox_iso_checksum_type`}}",

      "output_directory": "{{user `virtualbox_output_directory`}}",

      "shutdown_command": "echo 'vagrant' | sudo -S shutdown -P now",

      "ssh_password": "vagrant",
      "ssh_port": 22,
      "ssh_username": "vagrant",
      "ssh_wait_timeout": "10000s",

      "vboxmanage": [
        ["modifyvm", "{{.Name}}", "--memory", "512"],
        ["modifyvm", "{{.Name}}", "--cpus", "1"]
      ],
      "virtualbox_version_file": ".vbox_version"
    },
    {
      "type": "docker",

      "image": "{{user `docker_source_image`}}",
      "commit": "true"
    },
    {
      "name": "aws",
      "type": "amazon-ebs",

      "access_key": "{{user `aws_access_key`}}",
      "secret_key": "{{user `aws_secret_key`}}",

      "region": "us-east-1",
      "source_ami": "{{user `aws_source_ami`}}",
      "instance_type": "t2.micro",
      "ssh_username": "ubuntu",
      "ami_name": "{{user `name`}} {{timestamp}}",

      "ssh_pty" : true
    }
  ],

  "provisioners": [
    {
      "type": "shell",

      "only": ["virtualbox"],

      "scripts": [
        "scripts/common/sshd.sh",
        "scripts/ubuntu/networking.sh",
        "scripts/ubuntu/vagrant.sh",
        "scripts/ubuntu/sudoers.sh",
        "scripts/common/vmtools.sh",
        "scripts/ubuntu/cleanup.sh"
      ],
      "execute_command": "echo 'vagrant' | {{.Vars}} sudo -S -E sh -eux '{{.Path}}'"
    },
    {
      "type": "shell",
      "scripts": [
        "scripts/ubuntu/ansible.sh"
      ],
      "override": {
        "virtualbox": {
            "execute_command": "echo 'vagrant' | {{.Vars}} sudo -S -E sh -eux '{{.Path}}'"
        },
        "aws": {
          "execute_command": "{{.Vars}} sudo -S -E sh -eux '{{.Path}}'"
        }
      }
    },
    {
      "type": "shell",

      "only": ["virtualbox"],

      "scripts": [
        "scripts/common/minimize.sh"
      ],

      "execute_command": "echo 'vagrant' | {{.Vars}} sudo -S -E sh -eux '{{.Path}}'"
    },
    {
      "type": "shell",
      "inline": [
        "rm -rf /var/lib/apt/history/* /tmp/* /var/tmp/*"
      ],
      "override": {
        "virtualbox": {
              "execute_command": "echo 'vagrant' | {{.Vars}} sudo -S -E sh -eux '{{.Path}}'"
        },
        "aws": {
          "execute_command": "{{.Vars}} sudo -S -E sh -eux '{{.Path}}'"
        }
      }
    }
  ],

  "post-processors": [
    [
      {
        "type": "atlas",

        "only": ["aws"],

        "token": "{{user `atlas_token`}}",

        "artifact": "{{user `atlas_user`}}/{{user `image_name`}}",
        "artifact_type": "amazon.image",
        "metadata": {
          "created_at": "{{timestamp}}",
          "version": "{{user `version`}}.{{user `timestamp`}}"
        }
      }, {
        "type": "atlas",

        "only": ["docker"],

        "token": "{{user `atlas_token`}}",

        "artifact": "{{user `atlas_user`}}/{{user `image_name`}}",
        "artifact_type": "docker.image",
        "metadata": {
          "created_at": "{{timestamp}}",
          "version": "{{user `version`}}.{{user `timestamp`}}",
          "repository": "{{user `docker_user`}}/{{user `image_name`}}"
        }
      }
    ],
    [
      {
        "type": "vagrant",

        "only": ["virtualbox"],

        "output": "{{user `vagrant_box_output`}}",
        "compression_level": 9,
        "keep_input_artifact": true
      },
      {
        "type": "atlas",

        "only": ["virtualbox"],

        "token": "{{user `atlas_token`}}",

        "artifact": "{{user `atlas_user`}}/{{user `image_name`}}",
        "artifact_type": "vagrant.box",
        "metadata": {
          "created_at": "{{timestamp}}",
          "provider": "virtualbox",
          "version": "{{user `version`}}.{{user `timestamp`}}"
        }
      }
    ],
    [
      {
        "type": "docker-tag",

        "only": ["docker"],

        "repository": "{{user `docker_user`}}/{{user `image_name`}}",
        "tag": "{{user `version`}}.{{user `timestamp`}}"
      },
      {
        "type": "docker-tag",

        "only": ["docker"],

        "repository": "{{user `docker_user`}}/{{user `image_name`}}",
        "tag": "{{user `version`}}",
        "force": true
      },
      {
        "type": "docker-tag",

        "only": ["docker"],

        "repository": "{{user `docker_user`}}/{{user `image_name`}}",
        "tag": "latest",
        "force": true
      },
      {
        "type": "docker-push",

        "only": ["docker"]
      }
    ]
  ]
}
